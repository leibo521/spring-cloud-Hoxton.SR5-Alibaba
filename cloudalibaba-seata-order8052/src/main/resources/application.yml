server:
  port: 8052
spring:
  datasource:
    # 设置初始化大小，最小，最大,下面这些配置是针对druid数据源的
    initialSize: 10
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 6000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    username: root
    password: 158293
    url: jdbc:mysql:///seata_example?serverTimezone=GMT&rewriteBatchedStatements=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
  cloud:
    alibaba:
      seata:
        tx-service-group: test_my_tx_global
    #    sentinel:
#      # sentinel的控制面板的ip和端口号
#      transport:
#        dashboard: localhost:8080
#        # 默认8719端口,假如被占用会自动从8719开始依次的+1扫描
#        port: 8719
    nacos:
      discovery:
        server-addr: 192.168.43.245:8848
  application:
    name: alibaba-seata-order8052
management:
  endpoints:
    web:
      exposure:
        include: "*"
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:com/mybatismbg/mappers/*.xml
logging:
  level: {com.study.mybatismbg.mappers: debug,io.seata: debug}
feign:
  hystrix:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 3000
        readTimeout: 10000